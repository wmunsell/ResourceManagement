<script src="js/jexcel.js"></script>
<script src="https://bossanova.uk/jsuites/v2/jsuites.js"></script>
<link rel="stylesheet" href="css/jsuites.css" type="text/css" />
<link rel="stylesheet" href="https://bossanova.uk/jexcel/v4/jexcel.css" type="text/css" />

<link href="/style.css" rel="stylesheet" type="text/css"/>

<script type="text/javascript"src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<script>let jsonObj = {};</script>

<title>resourcemanager</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900" rel="stylesheet">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="css/style.css">


<div class="wrapper d-flex align-items-stretch ">
    <nav id="sidebar" class="active">
        <div class="custom-menu">
            <button type="button" id="sidebarCollapse" class="btn btn-primary">
                <i class="fa fa-bars"></i>
                <span class="sr-only">Toggle Menu</span>
            </button>
        </div>
        <h1><a href="/auth/outlook" class="logo">Home</a></h1>
        <ul class="list-unstyled components mb-5">
        <li>
            <a href="schedule"><span class="fa fa-sticky-note mr-3"></span> Scheduler</a>
        </li>
        <li>
            <a href="weeklymatrix"><span class="fa fa-sticky-note mr-3"></span> Weekly Matrix</a>
        </li>
        <li>
            <!-- <a href="FTEGraph.html"><span class="fa fa-sticky-note mr-3"></span> FTE Graph</a> -->
            <a href="FTEGraph"><span class="fa fa-sticky-note mr-3"></span> FTE Graph</a>
        </li>
        <li>
            <a href="edituser"><span class="fa fa-sticky-note mr-3"></span> Edit User</a>
        </li>
        <br/>
        <li>
            <input class="fa mr-3 employeeSelection" id="weekpicked" type="week" name="week">
            <button class="fa mr-3 employeeSelection" onclick=Update();>Update</button>
        </li>
        <li>
            <a href="emailer"><span class="fa fa-sticky-note mr-3"></span> Submit Ticket</a>
        </li>
        <li>
            <a href="/auth/logout" class="bottom"><span class="fa fa-sticky-note mr-3"></span> Logout</a>
        </li>
        </ul>
    </nav>
    <div class="chartouter center">
        <div class="chartmiddle">
            <!-- <input type='button' value='Sort column' onclick="myTable.hideIndex()"> -->
            <div class="chartinner">
                <h1 class="mainhead">Employee Hours</h1>
                <p id="dateRange" class="dateRange"></p>
            </div>
            <div class="chartinner">
                <div class="autocomplete">
                    <input id="name" type="text" name="employee" placeholder="Employee Name">
                </div>
            </div>
            <br/>
            <div class="chartinner Submit">
                <button onclick=Submit();>Submit</button>
                <button onclick=Reset();>Reset</button>
            </div>
            <br/>
            <div class="chartinner" id="etable"></div>
        </div>
    </div>
</div>

<script src="js/main.js"></script>
<script  type="text/javascript" >
    //----------------------------------------------------
    // auto complete

    var names = [];

    $.ajax({
        url: '/employees',
        async: false,
        success: function(data) {
            var count = data.length;
            for(var i=0;i<count;i++){
                names.push(data[i].Employee)
                }
            }
        });

    function autocomplete(inp, arr) {
    var currentFocus;
    inp.addEventListener("input", function(e) {
        var a, b, i, val = this.value;
        closeAllLists();
        if (!val) { return false;}
        currentFocus = -1;
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "autocomplete-list");
        a.setAttribute("class", "autocomplete-items");
        this.parentNode.appendChild(a);
        for (i = 0; i < arr.length; i++) {
            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
            b = document.createElement("DIV");
            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
            b.innerHTML += arr[i].substr(val.length);
            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
            b.addEventListener("click", function(e) {
                inp.value = this.getElementsByTagName("input")[0].value;
                closeAllLists();
            });
            a.appendChild(b);
            }
        }
    });
    inp.addEventListener("keydown", function(e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
            currentFocus++;
            addActive(x);
        } else if (e.keyCode == 38) {
            currentFocus--;
            addActive(x);
        } else if (e.keyCode == 13) {
            e.preventDefault();
            if (currentFocus > -1) {
            if (x) x[currentFocus].click();
            }
        }
    });
    function addActive(x) {
        if (!x) return false;
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
        for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
        }
    }
    function closeAllLists(elmnt) {
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
            x[i].parentNode.removeChild(x[i]);
        }
        }
    }
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
    }
    autocomplete(document.getElementById("name"), names);
    //----------------------------------------------------
    function Update(){ 
        var newDate = document.getElementById("weekpicked").value;
        $.ajax({
            url: '/newDate',
            type: 'POST',
            dataType: "json",
            data: {date: newDate},
        }); 
        location.reload();
    }

    function getDateOfISOWeek(weekNo) {
        Date.prototype.getWeek = function () {
            var target  = new Date(this.valueOf());
            var dayNr   = (this.getDay() + 6) % 7;
            target.setDate(target.getDate() - dayNr + 3);
            var firstThursday = target.valueOf();
            target.setMonth(0, 1);
            if (target.getDay() != 4) {
                target.setMonth(0, 1 + ((4 - target.getDay()) + 7) % 7);
            }
            return 1 + Math.ceil((firstThursday - target) / 604800000);
        };

        var d1 = new Date();
        numOfdaysPastSinceLastMonday = eval(d1.getDay()- 1);
        d1.setDate(d1.getDate() - numOfdaysPastSinceLastMonday);
        var weekNoToday = d1.getWeek();
        var weeksInTheFuture = eval( weekNo - weekNoToday );
        d1.setDate(d1.getDate() + eval( 7 * weeksInTheFuture ));
        var rangeIsFrom = eval(d1.getMonth()+1) + "/" + d1.getDate() + "/" + d1.getFullYear();
        d1.setDate(d1.getDate() + 6);
        var rangeIsTo = eval(d1.getMonth()+1) + "/" + d1.getDate() + "/" + d1.getFullYear() ;
        document.getElementById("dateRange").innerHTML = "Currently viewing the schedule for Week " + weekNo + " - " +  rangeIsFrom + " to "+rangeIsTo;
        return
    }

    $.ajax({
        url: '/dateRange',
        success: function(data) {
            weekpicked = data;
            var yearweek = data.split("-W");
            var y = yearweek[0];
            var w = yearweek[1];
            getDateOfISOWeek(w);
            }
        });

    var loaded = function(instance, obj) {
        obj.hideIndex();
        var count = headers.length; 
        for(var i=7;i<=count;i++){
            obj.headers[i].classList.add('employee');
        }
        obj.columns[2].classList.add('phasetitle');
    }
    function Reset(){
        location.reload();
    }
    function Submit(){
        var eName = document.getElementById("name").value;

        $.ajax({
            url: '/ename',
            type: 'POST',
            async: false,
            dataType: "json",
            data: {name: eName},
        });

        var headers = [
            {
                type: 'hidden',
                title:'Project Name',
                width:250
            }, 
            {
                type: 'text',
                title:'Project Number',
                width:130
            },
            {
                type: 'text',
                title:'Project Phase',
                width:475,
                style: {D6: 'background-color: orange; '}
            },
            {
                type: 'text',
                title:'Start Date',
                width:150
            },
            {
                type: 'text',
                title:'End Date',
                width:150
            },
            {
                type: 'numeric',
                title:'Budget Hours',
                width:120
            },
        ];

        var isSet = false; 

        $.ajax({
        url: '/searchHeader',
        async: false,
        success: function(data) {
            var name = data.replace("_", " ");
            if(name==eName){
                isSet = true;
                headers.push(
                {
                    type: 'text',
                    title: data,
                    width: 120
                }
            )}else{

            }
            }

        });

        if(isSet == true){
            $.ajax({
            url: '/employee_data',
            async: false,
            success: function(data) {
            }
            });

            jexcel(document.getElementById('etable'), {
                url: '/employee_data',
                columns: headers,
                onload: loaded,
                columnResize:false,
                nestedHeaders:[
                        {
                            title: 'SCHEDULE',
                            colspan: headers.length-1,
                        },
                ], 
            });
        }else{
            window.alert('The name entered does not match any within the database\nplease enter a valid name.');
            location.reload();
        }
    }
</script>